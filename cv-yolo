import rospy
from sensor_msgs.msg import Image
from cv_bridge import CvBridge
import cv2
from ultralytics import YOLO

# Callback function to process the received image message
def image_callback(msg):
    global model
    try:
        # Convert ROS Image message to OpenCV image
        cv_image = cv_bridge.imgmsg_to_cv2(msg, "bgr8")
        # cv_image[:, :, [0, 2]] = cv_image[:, :, [2, 0]]
        pred = model.track(source=cv_image, show=True, iou=0.5 , conf = 0.3  , save = False ,verbose = False,show_labels=True)
        # cv2.imshow("ROS Image", pred)
        # cv2.waitKey(1)  # Refresh display (1 ms delay)
    except Exception as e:
        print(e)

def main():
    rospy.init_node('image_display_node', anonymous=True)
    
    # Create a CvBridge object
    global cv_bridge
    global model
    cv_bridge = CvBridge()
    
    # ROS topic to subscribe to (replace 'your_topic' with your actual topic)
    topic = '/camera/rgb/image_rect_color'
    model = YOLO('/home/ibraa04/catkin_ws/src/ultralytics_ros/models/best.pt')
    
    # Subscribe to the image topic
    rospy.Subscriber(topic, Image, image_callback)
    
    # Keep the node running until terminated
    rospy.spin()

if __name__ == '__main__':
    main()